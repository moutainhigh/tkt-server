server:
  port: ${var.server.port}
spring:
  application:
    name: cypw-tktstar
  aop:
    proxyTargetClass: true
  main:
    allow-bean-definition-overriding: true
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource    # 数据库源操作类型
    driver-class-name: org.gjt.mm.mysql.Driver      # 配置MYSQL的驱动程序类
    url: ${db.master.url}
    username: ${db.master.username}
    password: ${db.master.password}
    druid:                                        # 配置数据库连接池
      min-idle: 5                                 # 最小维持连接数
      initial-size: 5                             # 初始化提供的连接数
      max-total: 5                                # 最大连接数
      max-wait-millis: 200                        # 等待连接获取的最大超时时间
      test-on-borrow: false
      test-on-return: false
      test-while-idle: false
      validation-query: select 1

# Eureka configurations
eureka:
  instance:
    appname: ${spring.application.name}
    instanceId: ${spring.cloud.client.ip-address} # 指定使用IP地址作为服务实例ID
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: ${var.eureka.renewalInterval}  # 心跳时间间隔
    leaseExpirationDurationInSeconds: ${var.eureka.expireDuration}  # 失联移除时间间隔
  healthcheck:
    enabled: true  # 支持心跳时带健康检查
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: ${var.eureka.fetchInterval}
    serviceUrl:
      defaultZone: ${var.eureka.serviceUrls}

# apollo
apollo:
  autoUpdateInjectedSpringProperties: true
  bootstrap:
    enabled: true
    namespaces: ${var.apollo.namespaces}  #服务空间
app:
  id: ${var.apollo.appId}  #项目ID
namespaces:
  val: ${var.apollo.namespaces}

# Management Configurations
management:
  server:
    port: ${var.management.port} # server的端口加10000
  endpoints:
    web:
      exposure:
        include: health,info,prometheus # 基于HTTP，默认仅开启有限的Endpoints
  metrics:
    tags:
      application: ${spring.application.name} # 让通知指标中带上应用名称的标签，方便Prometheus采集识别
      instance: ${eureka.instance.instanceId} # 让通知指标中带上实例名称的标签，方便Prometheus采集识别
    web:
      server:
        autoTimeRequests: true   # 默认开启对Web的指标采集

# hystrix和ribbon配置
hystrix:
  threadpool:
    default:
      coreSize: 8  # 默认使用CPU核数*2
      maximumSize: 16

  command:
    default:   # 通用的隔离策略配置
      execution:
        isolation:
          strategy : THREAD
          thread:
            timeoutInMilliseconds: 10000  # 客户端等待多长时间


feign:
  hystrix:
    enabled: true

ribbon:
  MaxAutoRetries: 1 # Max number of retries on the same server (excluding the first try)
  MaxAutoRetriesNextServer: 1 # Max number of next servers to retry (excluding the first server)
  OkToRetryOnAllOperations: false  # Whether all operations can be retried for this client
  ServerListRefreshInterval: 2000  # Interval to refresh the server list from the source
  ConnectTimeout: 3000  # Connect timeout used by Apache HttpClient
  ReadTimeout: 3000  # Read timeout used by Apache HttpClient

# page helper
pagehelper:
  helperDialect: mysql
  reasonable: false
  supportMethodsArguments: true
  params: count=countSql

# mybatis
mybatis:
  mapper-locations: classpath*:mapper/**/*.xml # 所有的mapper映射文件
  configuration:
    map-underscore-to-camel-case: true

# ucloud
ucloud:
  publicKey: bI4ZthH_aife7suwyXGFHg0DiqkBYHCmZKydICp_
  privateKey: 0yUnl6IZ9UyG_70g5gfPGwJBwQg7NJ_cHUTDQzwjQvpQHhEppLfZ08oM_F6SFj-F
  bucketName: caiyi
  region: cn-sh2
  proxySuffix: ufileos.com
  domain: http://caiyi.cn-sh2.ufileos.com/

common:
  redis:
    redisType:
      single: true
      cluster: false
      sentinel: false
    hostName: ${redis_hostname}:${redis_port}
    password: ${redis_pwd}
    timeout: 3000
    maxIdle: 300
    maxTotal: 600
    maxWaitMillis: 1000
    testOnBorrow: true
    type: single